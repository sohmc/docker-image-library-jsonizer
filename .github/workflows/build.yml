name: Docker Official Images JSON Builder

on: 
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]
    paths-ignore:
    - 'README.md'
    - 'LICENSE'
  release:
    types: published
  schedule:
    # 4am every Saturday
    - cron: '0 4 * * 6'

jobs:
  get-image-names:
    if: github.ref == '00000'
    runs-on: ubuntu-latest
    outputs:
      image-list: ${{ steps.build-image-list.outputs.IMAGE_LIST }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: docker-library/official-images
          sparse-checkout: library/
      
      - name: Build image list
        id: build-image-list
        working-directory: ./library
        run: |
          LS=$(ls | jq -cRsa 'split("\n")[:-1]')
          echo "IMAGE_LIST=$LS" >> $GITHUB_OUTPUT
          jq . <<< "$LS"

  build-json-files:
    runs-on: ubuntu-latest
    # needs: get-image-names
    strategy:
      matrix:
        # docker-image: ${{ fromJson(needs.get-image-names.outputs.image-list) }}
        docker-image: [php]
      max-parallel: 5
    steps:
      - uses: actions/checkout@v4

      - name: Build JSON
        run: |
          URL=https://raw.githubusercontent.com/docker-library/official-images/master/library/${IMAGE_NAME} node index.js
          cat output.json
          mkdir -p /tmp/json-library
          cp output.json /tmp/json-library/${IMAGE_NAME}
        env:
          IMAGE_NAME: ${{ matrix.docker-image }}

      - name: Upload JSON
        uses: actions/upload-artifact@v3
        with:
          name: docker-image-json
          path: /tmp/json-library/*
          if-no-files-found: error
          retention-days: 1

  merge-json-output:
    name: Merge JSON output files
    runs-on: ubuntu-latest
    needs: build-json-files
    
    steps:
      - name: Download JSON Files
        uses: actions/download-artifact@v3
        with:
          name: docker-image-json
          path: /tmp/json-library
      
      - name: List Files
        working-directory: /tmp/json-library
        run: ls -l
