name: Docker Official Images JSON Builder

on: workflow_call

jobs:
  get-image-names:
    if: github.ref == 'JOB DISABLED FOR NOW'
    runs-on: ubuntu-latest
    outputs:
      image-list: ${{ steps.build-image-list.outputs.IMAGE_LIST }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: docker-library/official-images
          sparse-checkout: library/
      
      - name: Build image list
        id: build-image-list
        working-directory: ./library
        run: |
          LS=$(ls | jq -cRsa 'split("\n")[:-1]')
          echo "IMAGE_LIST=$LS" >> $GITHUB_OUTPUT
          jq . <<< "$LS"

  build-json-files:
    runs-on: ubuntu-latest
    # needs: get-image-names
    strategy:
      matrix:
        # docker-image: ${{ fromJson(needs.get-image-names.outputs.image-list) }}
        docker-image: [php, alpine, debian, ubuntu, nginx, mysql]
      max-parallel: 5
    steps:
      - uses: actions/checkout@v4

      - name: Build JSON
        run: |
          URL=https://raw.githubusercontent.com/docker-library/official-images/master/library/${IMAGE_NAME} node index.js
          cat output.json
          mkdir -p /tmp/json-library
          cp output.json /tmp/json-library/${IMAGE_NAME}
        env:
          IMAGE_NAME: ${{ matrix.docker-image }}

      - name: Upload Image JSON Files
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-json-${{ matrix.docker-image }}
          path: /tmp/json-library/*
          if-no-files-found: error
          retention-days: 1

  merge-json-output:
    name: Merge JSON output files
    runs-on: ubuntu-latest
    needs: build-json-files
    
    steps:
      - name: Download JSON Files
        uses: actions/download-artifact@v5
        with:
          pattern: docker-image-json-*
          path: /tmp/json-library
          merge-multiple: true
      
      - name: List Files
        working-directory: /tmp/json-library
        run: ls -l

      - name: Get latest commit SHA
        id: get-latest-sha
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN_FOR_ACTIONS }}
          result-encoding: string
          script: |
            const commits = await github.rest.repos.listCommits({
              owner: 'docker-library',
              repo: 'official-images'
            });
            return commits.data[0].sha;

      - name: Release Files
        uses: ncipollo/release-action@v1
        with:
          artifacts: "/tmp/json-library/*"
          token: ${{ secrets.TOKEN_FOR_ACTIONS }}
          tag: v-${{ steps.get-latest-sha.outputs.result }}
          name: Release for ${{ steps.get-latest-sha.outputs.result }}
          makeLatest: true
          replacesArtifacts: true
          body: |
            Release artifacts have been updated to reflect [docker-library/official-images](https://github.com/docker-library/official-images) commit [`${{ steps.get-latest-sha.outputs.result }}`](https://github.com/docker-library/official-images/tree/${{ steps.get-latest-sha.outputs.result }}).
      
      - name: Store SHA in Github Variable
        run: |
          echo docker-library/official-images SHA: ${SHA}
          echo github repository: ${GITHUB_REPOSITORY}
          gh api --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${GITHUB_REPOSITORY}/actions/variables/DOCKER_LIBRARY_SHA \
            -f name='DOCKER_LIBRARY_SHA' \
            -f value="${SHA}"
        env:
          GH_TOKEN: ${{ secrets.TOKEN_FOR_ACTIONS }}
          SHA: ${{ steps.get-latest-sha.outputs.result }}
          