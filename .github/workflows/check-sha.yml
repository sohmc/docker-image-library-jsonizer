name: Check Commit SHA

on: 
  push:
    branches: [main]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'garbage.txt'
  schedule:
    # 12:34 AM every day
    - cron: '34 0 * * *'

jobs:
  get-latest-commit:
    runs-on: ubuntu-latest
    outputs:
      latest-sha: ${{ steps.get-latest-sha.outputs.result }}
      new-commit: ${{ steps.compare-sha.outputs.NEWCOMMIT }}
    steps:       
      - name: Get latest commit SHA
        id: get-latest-sha
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN_FOR_ACTIONS }}
          result-encoding: string
          script: |
            const commits = await github.rest.repos.listCommits({
              owner: 'docker-library',
              repo: 'official-images'
            });
            return commits.data[0].sha;

      - name: Compare SHAs
        id: compare-sha
        run: |
          echo Archived SHA: ${ARCHIVEDSHA}
          echo Latest SHA:   ${LATESTSHA}
          if [[ $ARCHIVEDSHA == $LATESTSHA ]]; then 
            NEWCOMMIT=false       
          else
            NEWCOMMIT=true
          fi

          echo "NEWCOMMIT=$NEWCOMMIT" >> $GITHUB_OUTPUT
          echo "NEWCOMMIT=$NEWCOMMIT"
        env:
          ARCHIVEDSHA: ${{ vars.DOCKER_LIBRARY_SHA }}
          LATESTSHA: ${{ steps.get-latest-sha.outputs.result }}

  trigger-build:
    if: needs.get-latest-commit.outputs.new-commit == 'true' || startsWith(github.event.head_commit.message, 'FORCE_BUILD=TRUE')
    name: Store docker-library commit SHA
    runs-on: ubuntu-latest
    needs: get-latest-commit

    steps:
      - uses: actions/checkout@v4

      - name: Update LATEST
        if: needs.get-latest-commit.outputs.new-commit == 'true'
        run: |
          echo "LATEST: ${LATEST_SHA}" > ./build-sha.txt
        env:
          LATEST_SHA: ${{ needs.get-latest-commit.outputs.latest-sha }}
  
      - name: Update FORCE_BUILD
        if: startsWith(github.event.head_commit.message, 'FORCE_BUILD=TRUE')
        run: |
          echo "FORCE_BUILD: ${LATEST_PHP_SHA}" > ./build_sha.txt
        env:
          LATEST_SHA: ${{ needs.get-latest-commit.outputs.latest-sha }}

      - name: Store SHA in Github Variable
        run: |
          echo docker-library/official-images SHA: ${SHA}
          echo github repository: ${GITHUB_REPOSITORY}
          gh api --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${GITHUB_REPOSITORY}/actions/variables/DOCKER_LIBRARY_SHA \
            -f name='DOCKER_LIBRARY_SHA' \
            -f value="${SHA}"
        env:
          GH_TOKEN: ${{ secrets.TOKEN_FOR_ACTIONS }}
          SHA: ${{ needs.get-latest-commit.outputs.latest-sha }}
